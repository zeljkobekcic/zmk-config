/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ROLLOW

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#include "../layer8/config.dtsi"
#include "../layer8/tap_dances.dtsi"
#include "../layer8/mod_morphs.dtsi"
#include "../layer8/macros.dtsi"

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
};

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <TAPPING_TERM>;
};

/ {
    chosen {
        zmk,matrix_transform = &five_column_transform;
	};

    behaviors {
    };


    keymap {
        compatible = "zmk,keymap";
        base_layer {
            bindings = <
                &kp Q       &kp W       &kp F       &kp P       &kp B       &kp J       &kp L       &kp U       &kp Y       &kp SQT
                &kp A       &kp R       &kp S       &kp T       &kp G       &kp M       &kp N       &kp E       &kp I       &kp O   
                &kp Z       &kp X       &kp C       &kp D       &kp V       &kp K       &kp H       &kp COMMA   &kp DOT     &kp FSLH 
                                        &kp C_MUTE  &mo NAV     &kp SPACE   &kp LSHFT   &mo SYM     &kp C_MUTE
            >;
            sensor-bindings = <&inc_dec_kp LA(F) LA(B) &inc_dec_kp DEL BSPC>;
        };
        nav_layer {
            bindings = <
            &kp TAB   XXXXXXXX  XXXXXXXX  XXXXXXXX  XXXXXXXX    XXXXXXXX  &kp HOME  &kp END   &kp BSPC  &kp DEL
            &sk LSHFT &sk LCTRL &sk LALT  &sk LCMD  XXXXXXXX    XXXXXXXX  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT 
            XXXXXXXX  XXXXXXXX  XXXXXXXX  XXXXXXXX  XXXXXXXX    XXXXXXXX  XXXXXXXX  &kp PG_DN &kp PG_UP XXXXXXXX 
                                ___________  ___________  ___________    ___________  ___________  ___________
                >;
            sensor-bindings = <&inc_dec_kp LC(TAB) LC(LS(TAB)) &inc_dec_kp DEL BSPC>;
        };
        sym_layer {
            bindings = <
            &kp ESC     &kp DLR     &kp PERC    &kp LPRN    &kp RPRN    &kp CIRC    &kp TILD    &kp GRV     &kp PIPE    &kp BSLS  
            &kp MINS    &kp PLUS    &kp EQL     &kp LCBR    &kp RCBR    &kp HASH    &sk LCMD    &sk LALT    &sk LCTRL   &sk LSHFT  
            &kp UNDS    &kp ASTR    &kp AT      &kp LBRC    &kp RBRC    XXXXXXXX    &kp AMPR    &kp SCLN    &kp COLN    &kp EXLM  
                                ___________  ___________  ___________    ___________  ___________  ___________

            >;
            sensor-bindings = <&inc_dec_kp LC(LS(C)) LC(LS(V)) &inc_dec_kp DEL BSPC>;
        };
        num_layer {
            bindings = <
          &kp N1    &kp N2    &kp N3    &kp N4     &kp N5      &kp N6    &kp N7     &kp N8     &kp N9     &kp N0   
          &sk LSHFT &sk LCTRL &sk LALT  &sk LCMD   &kp F11     &kp F12   &sk LCMD   &sk LALT   &sk LCTRL  &sk LSHFT  
          &kp F1    &kp F2    &kp F3    &kp F4     &kp F5      &kp F6    &kp F7     &kp F8     &kp F9     &kp F10   
                        ___________     ___________      ___________     ___________     ___________      ___________
            >;
            sensor-bindings = <&inc_dec_kp LC(LS(C)) LC(LS(V)) &inc_dec_kp DEL BSPC>;
        };
        adj_layer {
            bindings = <
                _____x_____     _____x_____     _____x_____     &out OUT_TOG    BTClear     TO_DEFAULT      TO_QWERTY       TO_GAMING       _____x_____     _____x_____
                BT4         BT3         BT2         BT1         BT0         _____x_____     _____x_____     _____x_____     _____x_____     _____x_____
                _____x_____     _____x_____     _____x_____     &bootloader     _____x_____     _____x_____     &bootloader     _____x_____     _____x_____     ___________
                                TO_DEFAULT      ___________     ___________     ___________     TO_FUNC     ___________
            >;
            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP &inc_dec_kp DEL BSPC>;
        };
    };
};
